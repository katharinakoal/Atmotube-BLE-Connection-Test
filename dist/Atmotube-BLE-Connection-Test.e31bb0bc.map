{"version":3,"sources":["src/app.js","index.js"],"names":["App","characteristic","document","querySelector","addEventListener","event","navigator","bluetooth","requestDevice","filters","name","optionalServices","then","device","gatt","connect","server","console","log","getPrimaryService","service","getCharacteristic","readValue","value","getInt16","catch","error","instance","init"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAMA;;;AACF,iBAAc;AAAA;;AACV,SAAKC,cAAL,GAAsB,IAAtB;AACH;;;;2BACM;AAAA;;AACHC,MAAAA,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCC,gBAAtC,CAAuD,WAAvD,EAAoE,UAAAC,KAAK,EAAI;AACzEC,QAAAA,SAAS,CAACC,SAAV,CACKC,aADL,CACmB;AACXC,UAAAA,OAAO,EAAE,CACL;AACIC,YAAAA,IAAI,EAAE;AADV,WADK,CADE;AAMXC,UAAAA,gBAAgB,EAAE,CAAC,sCAAD;AANP,SADnB,EASKC,IATL,CASU,UAAAC,MAAM;AAAA,iBAAIA,MAAM,CAACC,IAAP,CAAYC,OAAZ,EAAJ;AAAA,SAThB,EAUKH,IAVL,CAUU,UAAAI,MAAM,EAAI;AACZ;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,iBAAOA,MAAM,CAACG,iBAAP,CAAyB,sCAAzB,CAAP;AACH,SAdL,EAeKP,IAfL,CAeU,UAAAQ,OAAO,EAAI;AACb;AACA,iBAAOA,OAAO,CAACC,iBAAR,CAA0B,sCAA1B,CAAP;AACH,SAlBL,EAmBKT,IAnBL,CAmBU,UAAAX,cAAc,EAAI;AACpB;AACA,UAAA,KAAI,CAACA,cAAL,GAAsBA,cAAtB;AACA,iBAAOA,cAAc,CAACqB,SAAf,EAAP;AACH,SAvBL,EAwBKV,IAxBL,CAwBU,UAAAW,KAAK,EAAI;AACXN,UAAAA,OAAO,CAACC,GAAR,CAAYK,KAAZ;AACAN,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAYK,KAAK,CAACC,QAAN,EAAxB;AACH,SA3BL,EA4BKC,KA5BL,CA4BW,UAAAC,KAAK,EAAI;AACZT,UAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACH,SA9BL;AA+BH,OAhCD;AAiCAxB,MAAAA,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,EAAyCC,gBAAzC,CAA0D,OAA1D,EAAmE,UAAAC,KAAK,EAAI;AACxE,QAAA,KAAI,CAACJ,cAAL,CAAoBqB,SAApB,GAAgCV,IAAhC,CAAqCK,OAAO,CAACC,GAA7C;AACH,OAFD;AAGH;;;;;;AAGL,IAAMS,QAAQ,GAAG,IAAI3B,GAAJ,EAAjB;eAEe2B;;;;;AC9Cf;;;;AAEA3B,aAAI4B,IAAJ","file":"Atmotube-BLE-Connection-Test.e31bb0bc.map","sourceRoot":"..","sourcesContent":["class App {\r\n    constructor() {\r\n        this.characteristic = null;\r\n    }\r\n    init() {\r\n        document.querySelector('button#init').addEventListener('pointerup', event => {\r\n            navigator.bluetooth\r\n                .requestDevice({\r\n                    filters: [\r\n                        {\r\n                            name: 'ATMOTUBE'\r\n                        }\r\n                    ],\r\n                    optionalServices: ['db450001-8e9a-4818-add7-6ed94a328ab2']\r\n                })\r\n                .then(device => device.gatt.connect())\r\n                .then(server => {\r\n                    // Getting Battery Service...\r\n                    console.log(server);\r\n                    return server.getPrimaryService('db450001-8e9a-4818-add7-6ed94a328ab2');\r\n                })\r\n                .then(service => {\r\n                    // Getting Battery Level Characteristic...\r\n                    return service.getCharacteristic('db450002-8e9a-4818-add7-6ed94a328ab2');\r\n                })\r\n                .then(characteristic => {\r\n                    // Reading Battery Level...\r\n                    this.characteristic = characteristic;\r\n                    return characteristic.readValue();\r\n                })\r\n                .then(value => {\r\n                    console.log(value);\r\n                    console.log('VOC is ' + value.getInt16());\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n        });\r\n        document.querySelector('button#refresh').addEventListener('click', event => {\r\n            this.characteristic.readValue().then(console.log);\r\n        });\r\n    }\r\n}\r\n\r\nconst instance = new App();\r\n\r\nexport default instance;\r\n","import App from './src/app';\r\n\r\nApp.init();\r\n"]}